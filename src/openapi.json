{
  "openapi": "3.0.3",
  "info": {
    "title": "WA Gateway",
    "description": "API para gestionar sesiones de WhatsApp (Baileys) y envío de mensajes con buenas prácticas anti-spam.",
    "version": "1.0.0"
  },
  "servers": [
    { "url": "http://localhost:4000", "description": "Local" }
  ],
  "tags": [
    { "name": "Health" },
    { "name": "Sessions" },
    { "name": "Messaging" }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": ["Health"],
        "summary": "Revisar estado del servicio",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HealthResponse" },
                "examples": {
                  "ok": { "value": { "ok": true } }
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "get": {
        "tags": ["Sessions"],
        "summary": "Listar todas las sesiones en memoria",
        "responses": {
          "200": {
            "description": "Listado de sesiones",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/SessionListItem" }
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{id}/start": {
      "post": {
        "tags": ["Sessions"],
        "summary": "Iniciar o reutilizar una sesión",
        "parameters": [
          { "$ref": "#/components/parameters/SessionIdParam" }
        ],
        "responses": {
          "200": {
            "description": "Sesión iniciada o en progreso",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SessionStartResponse" }
              }
            }
          },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/sessions/{id}/status": {
      "get": {
        "tags": ["Sessions"],
        "summary": "Obtener estado de una sesión",
        "parameters": [
          { "$ref": "#/components/parameters/SessionIdParam" }
        ],
        "responses": {
          "200": {
            "description": "Estado de sesión",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SessionStatusResponse" }
              }
            }
          },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      }
    },
    "/sessions/{id}/qr": {
      "get": {
        "tags": ["Sessions"],
        "summary": "Obtener el QR vigente de la sesión (si hay)",
        "parameters": [
          { "$ref": "#/components/parameters/SessionIdParam" }
        ],
        "responses": {
          "200": {
            "description": "QR actual o null",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SessionQRResponse" }
              }
            }
          },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      }
    },
    "/sessions/{id}/qr/refresh": {
      "post": {
        "tags": ["Sessions"],
        "summary": "Forzar refresco de QR (con throttling interno)",
        "parameters": [
          { "$ref": "#/components/parameters/SessionIdParam" }
        ],
        "responses": {
          "200": {
            "description": "QR actualizado o en camino",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SessionQRRefreshResponse" }
              }
            }
          },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/sessions/{id}": {
      "delete": {
        "tags": ["Sessions"],
        "summary": "Eliminar sesión, cerrar socket y purgar credenciales",
        "parameters": [
          { "$ref": "#/components/parameters/SessionIdParam" }
        ],
        "responses": {
          "200": {
            "description": "Sesión eliminada",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SimpleOkResponse" }
              }
            }
          }
        }
      }
    },
    "/sessions/{id}/reset": {
      "post": {
        "tags": ["Sessions"],
        "summary": "Resetear sesión: logout, borrar auth y re-iniciar",
        "parameters": [
          { "$ref": "#/components/parameters/SessionIdParam" }
        ],
        "responses": {
          "200": {
            "description": "Sesión reseteada",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SessionResetResponse" }
              }
            }
          },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/messages": {
      "post": {
        "tags": ["Messaging"],
        "summary": "Enviar mensaje de texto a un JID/numero",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MessageSendRequest" },
              "examples": {
                "basic": {
                  "value": {
                    "sessionId": "MiEmpresa",
                    "to": "573001112233",
                    "text": "Hola, ¿cómo estás?"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mensaje enviado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageSendResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": {
            "description": "El destinatario tiene opt-out",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          },
          "404": { "$ref": "#/components/responses/NotFoundSession" },
          "409": {
            "description": "La sesión no está activa",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          },
          "423": {
            "description": "Fuera de horario permitido",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          },
          "429": {
            "description": "Rate limit o cap diario alcanzado",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          },
          "503": {
            "description": "Sesión pausada temporalmente",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "SessionIdParam": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": { "type": "string", "example": "MiEmpresa" }
      }
    },
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": { "ok": { "type": "boolean", "example": true } },
        "required": ["ok"]
      },
      "SimpleOkResponse": {
        "type": "object",
        "properties": {
          "ok": { "type": "boolean", "example": true },
          "sessionId": { "type": "string", "example": "MiEmpresa" }
        },
        "required": ["ok", "sessionId"]
      },
      "SessionListItem": {
        "type": "object",
        "properties": {
          "sessionId": { "type": "string" },
          "status": { "type": "string", "enum": ["inactive", "connecting", "active"] },
          "hasQR": { "type": "boolean" },
          "startedAt": { "type": "integer", "nullable": true, "description": "epoch ms" },
          "lastUpdate": { "type": "integer", "nullable": true, "description": "epoch ms" }
        },
        "required": ["sessionId", "status", "hasQR"]
      },
      "SessionStartResponse": {
        "type": "object",
        "properties": {
          "sessionId": { "type": "string" },
          "status": { "type": "string", "enum": ["connecting", "active", "inactive"] },
          "qr": { "type": "string", "nullable": true },
          "startedAt": { "type": "integer", "nullable": true },
          "lastUpdate": { "type": "integer", "nullable": true }
        },
        "required": ["sessionId", "status"]
      },
      "SessionStatusResponse": {
        "type": "object",
        "properties": {
          "sessionId": { "type": "string" },
          "status": { "type": "string", "enum": ["inactive", "connecting", "active"] },
          "hasQR": { "type": "boolean" },
          "qrAt": { "type": "integer", "nullable": true },
          "msToExpire": { "type": "integer", "nullable": true },
          "lastUpdate": { "type": "integer", "nullable": true },
          "startedAt": { "type": "integer", "nullable": true }
        },
        "required": ["sessionId", "status", "hasQR"]
      },
      "SessionQRResponse": {
        "type": "object",
        "properties": {
          "sessionId": { "type": "string" },
          "qr": { "type": "string", "nullable": true },
          "qrAt": { "type": "integer", "nullable": true }
        },
        "required": ["sessionId"]
      },
      "SessionQRRefreshResponse": {
        "type": "object",
        "properties": {
          "ok": { "type": "boolean", "example": true },
          "sessionId": { "type": "string" },
          "status": { "type": "string", "enum": ["connecting", "active", "inactive"] },
          "qr": { "type": "string", "nullable": true },
          "qrAt": { "type": "integer", "nullable": true },
          "lastUpdate": { "type": "integer", "nullable": true }
        },
        "required": ["ok", "sessionId", "status"]
      },
      "SessionResetResponse": {
        "type": "object",
        "properties": {
          "ok": { "type": "boolean", "example": true },
          "sessionId": { "type": "string" },
          "status": { "type": "string", "enum": ["connecting", "active", "inactive"] }
        },
        "required": ["ok", "sessionId", "status"]
      },
      "MessageSendRequest": {
        "type": "object",
        "properties": {
          "sessionId": { "type": "string", "example": "MiEmpresa" },
          "to": {
            "type": "string",
            "description": "Número en formato internacional o JID. Si no incluye @, se convertirá a {numero}@s.whatsapp.net",
            "example": "573001112233"
          },
          "text": { "type": "string", "example": "Hola, ¿cómo estás?" }
        },
        "required": ["sessionId", "to", "text"]
      },
      "MessageSendResponse": {
        "type": "object",
        "properties": {
          "ok": { "type": "boolean", "example": true },
          "response": { "type": "object", "description": "Objeto de respuesta Baileys" }
        },
        "required": ["ok"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": { "type": "string", "example": "session_not_active" }
        },
        "required": ["error"]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Solicitud inválida",
        "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
      },
      "Unauthorized": {
        "description": "Falta o es inválida la API key",
        "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
      },
      "NotFound": {
        "description": "Recurso no encontrado",
        "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
      },
      "NotFoundSession": {
        "description": "Sesión no encontrada o inactiva",
        "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
      },
      "ServerError": {
        "description": "Error interno",
        "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
      }
    },
    "securitySchemes": {
      "ApiKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "API key opcional (si está configurada en el servidor)."
      }
    }
  },
  "security": [
    { "ApiKeyHeader": [] }
  ]
}
